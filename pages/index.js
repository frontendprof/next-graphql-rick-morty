import Head from 'next/head'
import {useState} from "react"
import {
  ApolloClient,
  InMemoryCache,
  // ApolloProvider,
  // useQuery,
  gql
} from "@apollo/client";

import {
  Heading,
  Box,
  Flex,
  Input,
  Stack,
  IconButton,
  useToast
} from "@chakra-ui/react"

import styles from '../styles/Home.module.css'
import Characters from '../components/Characters';
import {SearchIcon,CloseIcon} from "@chakra-ui/icons"

export default function Home(results) {
  const initState=results;
  const [chars,setChars]=useState(initState.characters)
  const [search,setSearch]=useState("")
  const toast=useToast();



  return (
    <Flex direction="column" align="center" justify="center">

      <Head>
        <title>NextJS Apollo Tut</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Box mb={4} flexDirection="column" align="center" justify="center" py={8}>
        <Heading as="h1" size="2xl" mb={8}>
          Rick and Morty
        </Heading>
        <form onSubmit={async e =>{
          e.preventDefault()
          const results=await fetch("/api/SearchChars",{
            method:"post",
            body:search,
          });
          const {characters,error}=await results.json();
          if(error){
            toast({
              position:"bottom",
              title:"An error ocurred",
              description:error,
              status:"error",
              duration:5000,
              isClosable:true,
            })
          }else{
            setChars(characters)
          }
        }}>
          <Stack maxWidth="350px" width="100%" isInline mb={8}>
            <Input placeholder="Search ..." value={search} border="none" 
              onChange={e=>setSearch(e.target.value)}></Input>
            
            <IconButton 
              colorScheme="blue"
              aria-label="Search Database"
              icon={<SearchIcon />}
              disabled={search===""}
              type="submit"
            />
            <IconButton 
              colorScheme="red"
              aria-label="Reset Button"
              icon={<CloseIcon />}
              disabled={search===""}
              onClick={async()=>{
                setSearch("")
                setChars(initState.characters)
              }}
            />
          </Stack>
        </form>

        <Characters characters={chars} />
      </Box>

      
      <footer className={styles.footer}>
        Powered by comprehensive SaaS solution producty by &copy;BILLZ
      </footer>
    </Flex>
  )
}


export async function getStaticProps(){
  const client= new ApolloClient({
    uri:"https://rickandmortyapi.com/graphql",
    cache: new InMemoryCache(),
  })
  const {data}=await client.query({
    query:gql`
      query{
        characters(page:1){
          info{
            count
            pages
          }
          results{
            name
            id
            location{
              id
              name
            }
            origin{
              id
              name
            }
            episode{
              id
              episode
              air_date
            }
            image
          }
        }
      }
    `
  })
  return{
    props:{
      characters:data.characters.results,

    }
  }
}